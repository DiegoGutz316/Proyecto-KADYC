@model Proyecto_v1.Models.Category

@{
    ViewData["Title"] = "Crear Categoría";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/crud-responsive.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/categories-crud.css" asp-append-version="true" />

<div class="crud-container">
    <!-- Header -->
    <div class="crud-header">
        <h1 class="crud-title">
            <i class="fas fa-plus-circle"></i>
            Crear Nueva Categoría
        </h1>
        <div class="crud-actions">
            <a asp-action="Index" class="crud-btn crud-btn--secondary">
                <i class="fas fa-arrow-left"></i>
                Volver a la Lista
            </a>
        </div>
    </div>

    <div class="crud-form-container">
        <div class="crud-form-header">
            <h2 class="crud-form-title">Información de la Categoría</h2>
            <p class="crud-form-subtitle">Complete los campos requeridos para agregar una nueva categoría al sistema.</p>
        </div>

        <form asp-action="Create" class="crud-form" novalidate>
            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert">
                <i class="fas fa-exclamation-triangle"></i>
                <span>Por favor, corrige los siguientes errores:</span>
            </div>

            <div class="form-grid">
                <!-- Información básica -->
                <div class="form-group">
                    <label asp-for="Name" class="form-label">
                        <i class="fas fa-tag"></i>
                        @Html.DisplayNameFor(model => model.Name) *
                    </label>
                    <input asp-for="Name" class="form-control" placeholder="Ej: Camisetas, Pantalones, Accesorios..." />
                    <small class="form-text text-muted">
                        <i class="fas fa-info-circle"></i>
                        Ingresa un nombre descriptivo para la categoría
                    </small>
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <!-- Descripción de ayuda -->
                <div class="form-group">
                    <label class="form-label">
                        <i class="fas fa-lightbulb"></i>
                        Ejemplos de categorías
                    </label>
                    <div class="category-examples">
                        <div class="example-item">
                            <i class="fas fa-tshirt"></i>
                            <span>Camisetas</span>
                        </div>
                        <div class="example-item">
                            <i class="fas fa-user-tie"></i>
                            <span>Formal</span>
                        </div>
                        <div class="example-item">
                            <i class="fas fa-running"></i>
                            <span>Deportiva</span>
                        </div>
                        <div class="example-item">
                            <i class="fas fa-gem"></i>
                            <span>Accesorios</span>
                        </div>
                    </div>
                </div>

                <!-- Estado activo -->
                <div class="form-group" style="grid-column: 1 / -1;">
                    <div class="form-check">
                        <input class="form-check-input" asp-for="IsActive" type="checkbox" checked />
                        <label class="form-check-label" asp-for="IsActive">
                            <i class="fas fa-toggle-on"></i>
                            @Html.DisplayNameFor(model => model.IsActive)
                        </label>
                    </div>
                    <small class="form-text text-muted">
                        <i class="fas fa-info-circle"></i>
                        Las categorías activas aparecerán disponibles para asignar a productos. Las inactivas se mantendrán ocultas.
                    </small>
                </div>

                <!-- Información adicional -->
                <div class="form-group info-panel" style="grid-column: 1 / -1;">
                    <div class="info-header">
                        <i class="fas fa-info-circle"></i>
                        <span>Información Importante</span>
                    </div>
                    <div class="info-content">
                        <ul>
                            <li>Las categorías ayudan a organizar los productos en la tienda</li>
                            <li>Los clientes pueden filtrar productos por categoría</li>
                            <li>Una vez creada, puedes asignar productos a esta categoría</li>
                            <li>Puedes activar/desactivar categorías sin eliminarlas</li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="crud-btn crud-btn--success">
                    <i class="fas fa-save"></i>
                    Crear Categoría
                </button>
                <a asp-action="Index" class="crud-btn crud-btn--secondary">
                    <i class="fas fa-times"></i>
                    Cancelar
                </a>
            </div>
        </form>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    initializeFormValidation();
    initializeNameSuggestions();
});

function initializeFormValidation() {
    const form = document.querySelector('.crud-form');
    const nameField = document.getElementById('Name');
    
    form.addEventListener('submit', function(e) {
        let isValid = true;
        
        // Validar nombre
        if (!nameField.value.trim()) {
            nameField.classList.add('is-invalid');
            isValid = false;
        } else {
            nameField.classList.remove('is-invalid');
        }
        
        if (!isValid) {
            e.preventDefault();
            
            // Scroll al primer campo con error
            const firstError = form.querySelector('.is-invalid');
            if (firstError) {
                firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                firstError.focus();
            }
        }
    });
    
    // Remover validación al escribir
    nameField.addEventListener('input', function() {
        if (this.value.trim()) {
            this.classList.remove('is-invalid');
        }
    });
}

function initializeNameSuggestions() {
    const nameField = document.getElementById('Name');
    const examples = document.querySelectorAll('.example-item');
    
    examples.forEach(example => {
        example.addEventListener('click', function() {
            const categoryName = this.querySelector('span').textContent;
            nameField.value = categoryName;
            nameField.focus();
            
            // Añadir efecto visual
            this.style.background = '#e3f2fd';
            setTimeout(() => {
                this.style.background = '';
            }, 300);
        });
    });
}
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
