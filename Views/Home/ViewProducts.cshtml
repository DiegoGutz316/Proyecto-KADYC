@model IEnumerable<Proyecto_v1.Models.Product>

@{
    ViewData["Title"] = "Productos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/product-catalog.css" asp-append-version="true" />

<section class="kad-section" id="productos">
    <div class="kad-wrap">
        <header class="catalog-header">
            <div class="catalog-title-wrapper">
                <h2 class="title">Catálogo de Productos</h2>
                <div class="catalog-cart-summary">
                    <a asp-controller="Cart" asp-action="Index" class="cart-summary-link">
                        <i class="fas fa-shopping-cart"></i>
                        <span class="cart-summary-text">Mi Carrito</span>
                        <span class="cart-summary-count" id="header-cart-count">[0]</span>
                    </a>
                </div>
            </div>
            <p class="catalog-subtitle">Descubre nuestra colección completa de productos únicos</p>
        </header>

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle"></i>
                @TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-circle"></i>
                @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <!-- Filtros y búsqueda -->
        <div class="catalog-filters">
            <div class="filter-search">
                <input type="text" id="product-search" placeholder="Buscar productos..." class="search-input">
                <i class="fas fa-search search-icon"></i>
            </div>
            <div class="filter-category">
                <select id="category-filter" class="category-select">
                    <option value="">Todas las categorías</option>
                    @{
                        var categories = Model?.Select(p => p.Category?.Name).Where(c => !string.IsNullOrEmpty(c)).Distinct();
                        if (categories != null)
                        {
                            foreach (var category in categories)
                            {
                                <option value="@category">@category</option>
                            }
                        }
                    }
                </select>
            </div>
        </div>

        <div class="kad-products-grid" id="products-grid">
            @if (Model != null && Model.Any())
            {
                foreach (var producto in Model)
                {
                    <article class="kad-product-card" data-category="@producto.Category?.Name" data-name="@producto.Name.ToLower()">
                        <div class="kad-product-image-container">
                            @if (!string.IsNullOrEmpty(producto.ImageUrl))
                            {
                                <div class="kad-product-img" style="background-image:url('@producto.ImageUrl');" role="img" aria-label="@producto.Name"></div>
                            }
                            else
                            {
                                <div class="kad-product-img kad-product-no-image" role="img" aria-label="@producto.Name">
                                    <i class="fas fa-image"></i>
                                </div>
                            }
                            <div class="product-overlay">
                                <div class="quick-actions">
                                    @* <button class="quick-view-btn" onclick="showQuickView(@producto.Id)" title="Vista rápida">
                                        <i class="fas fa-eye"></i>
                                    </button> *@
                                </div>
                            </div>
                            @if (producto.Stock <= 0)
                            {
                                <div class="out-of-stock-badge">Agotado</div>
                            }
                        </div>
                        <div class="kad-product-info">
                            <div class="product-header">
                                <h3 class="kad-product-title">@producto.Name</h3>
                                @if (!string.IsNullOrEmpty(producto.Category?.Name))
                                {
                                    <span class="kad-product-category">@producto.Category.Name</span>
                                }
                            </div>
                            <p class="kad-product-desc">@producto.Description</p>
                            <div class="kad-product-meta">
                                <span class="kad-product-price">₡@producto.Price.ToString("N0")</span>
                                @if (producto.Stock > 0)
                                {
                                    <span class="stock-indicator">@producto.Stock disponibles</span>
                                }
                                else
                                {
                                    <span class="stock-indicator out-of-stock">Sin stock</span>
                                }
                            </div>
                            <div class="kad-product-actions">
                                @if (producto.Stock > 0)
                                {
                                    <form method="post" asp-controller="Cart" asp-action="AddToCart" class="add-to-cart-form">
                                        <input type="hidden" name="productId" value="@producto.Id">
                                        <div class="quantity-selector">
                                            <label for="quantity-@producto.Id" class="quantity-label">Cantidad:</label>
                                            <select name="quantity" id="quantity-@producto.Id" class="quantity-select">
                                                @for (int i = 1; i <= Math.Min(producto.Stock, 10); i++)
                                                {
                                                    <option value="@i">@i</option>
                                                }
                                            </select>
                                        </div>
                                        <button type="submit" class="kad-btn kad-btn--cart">
                                            <i class="fas fa-shopping-cart"></i>
                                            <span class="btn-text">Agregar al Carrito</span>
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <button class="kad-btn kad-btn--disabled" disabled>
                                        <i class="fas fa-times"></i>
                                        Sin Stock
                                    </button>
                                }
                                <a class="kad-btn kad-btn--outline kad-btn--small" asp-controller="Home" asp-action="DetallesProducto" asp-route-id="@producto.Id">
                                    <i class="fas fa-info-circle"></i>
                                    Ver detalles
                                </a>
                            </div>
                        </div>
                    </article>
                }
            }
            else
            {
                <div class="empty-catalog">
                    <i class="fas fa-box-open"></i>
                    <h3>No hay productos disponibles</h3>
                    <p>No hay productos disponibles en este momento. ¡Vuelve pronto para ver nuestras novedades!</p>
                </div>
            }
        </div>

        <!-- Botón flotante del carrito -->
        <div class="floating-cart" id="floating-cart">
            <a asp-controller="Cart" asp-action="Index" class="floating-cart-btn">
                <i class="fas fa-shopping-cart"></i>
                <span class="floating-cart-count" id="floating-cart-count">0</span>
            </a>
        </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    updateCartCounts();
    initializeCartFunctionality();
    initializeFilters();
    // initializeFloatingCart();
});

function updateCartCounts() {
    fetch('@Url.Action("GetCartCount", "Cart")')
        .then(response => response.json())
        .then(count => {
            // Actualizar todos los contadores
            const headerCount = document.getElementById('header-cart-count');
            const floatingCount = document.getElementById('floating-cart-count');
            
            if (headerCount) {
                headerCount.textContent = '[' + count + ']';
            }
            
            if (floatingCount) {
                floatingCount.textContent = count;
                // Mostrar/ocultar botón flotante según el contenido
                const floatingCart = document.getElementById('floating-cart');
                if (count > 0) {
                    floatingCart.classList.add('show');
                } else {
                    floatingCart.classList.remove('show');
                }
            }
        })
        .catch(error => console.error('Error updating cart count:', error));
}

function initializeCartFunctionality() {
    const addToCartForms = document.querySelectorAll('.add-to-cart-form');
    
    addToCartForms.forEach(form => {
        form.addEventListener('submit', function(e) {
            const button = this.querySelector('.kad-btn--cart');
            const originalContent = button.innerHTML;
            
            // Mostrar estado de carga
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> <span class="btn-text">Agregando...</span>';
            button.disabled = true;
            
            // Simular delay para mejor UX
            setTimeout(() => {
                button.innerHTML = '<i class="fas fa-check"></i> <span class="btn-text">¡Agregado!</span>';
                button.style.background = 'linear-gradient(135deg, #28a745 0%, #20c997 100%)';
                
                // Restaurar estado original después de 2 segundos
                setTimeout(() => {
                    button.innerHTML = originalContent;
                    button.style.background = '';
                    button.disabled = false;
                    updateCartCounts(); // Actualizar contadores
                }, 2000);
            }, 500);
        });
    });
}

function initializeFilters() {
    const searchInput = document.getElementById('product-search');
    const categoryFilter = document.getElementById('category-filter');
    const productCards = document.querySelectorAll('.kad-product-card');
    
    function filterProducts() {
        const searchTerm = searchInput.value.toLowerCase();
        const selectedCategory = categoryFilter.value;
        
        productCards.forEach(card => {
            const productName = card.dataset.name || '';
            const productCategory = card.dataset.category || '';
            
            const matchesSearch = productName.includes(searchTerm);
            const matchesCategory = !selectedCategory || productCategory === selectedCategory;
            
            if (matchesSearch && matchesCategory) {
                card.style.display = 'flex';
                card.style.animation = 'fadeIn 0.3s ease';
            } else {
                card.style.display = 'none';
            }
        });
    }
    
    searchInput.addEventListener('input', filterProducts);
    categoryFilter.addEventListener('change', filterProducts);
}

function showQuickView(productId) {
    // Implementar vista rápida del producto
    window.location.href = '@Url.Action("DetallesProducto", "Home")?id=' + productId;
}

// Hacer la función disponible globalmente
window.updateCartCounts = updateCartCounts;
</script>